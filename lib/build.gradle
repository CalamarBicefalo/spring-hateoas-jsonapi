plugins {
    id 'java'
    id 'war'
    id 'jacoco'
    id 'io.freefair.lombok' version '5.1.0'
    id 'org.asciidoctor.jvm.convert' version '3.1.0'
}

group = 'com.toedter'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

repositories {
    mavenCentral()
    maven { url 'https://repo.spring.io/release' }
}

configurations {
    docs
}

dependencies {
    implementation 'org.springframework.hateoas:spring-hateoas:1.1.0.RELEASE'
    implementation 'com.google.code.findbugs:jsr305:3.0.2'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.11.0'
    implementation 'org.atteo:evo-inflector:1.2.2'

    testImplementation 'org.slf4j:slf4j-api:1.7.30'
    testImplementation 'org.slf4j:jcl-over-slf4j:1.7.30'
    testImplementation 'ch.qos.logback:logback-classic:1.2.3'
    testImplementation 'org.springframework:spring-test:5.2.6.RELEASE'
    testImplementation 'org.springframework.hateoas:spring-hateoas:1.1.0.RELEASE'
    testImplementation 'org.junit.jupiter:junit-jupiter:5.6.2'
    testImplementation 'org.assertj:assertj-core:3.11.1'
    testImplementation 'org.hamcrest:hamcrest-library:2.2'
    testImplementation 'org.springframework:spring-webmvc:5.2.6.RELEASE'
    testImplementation 'javax.persistence:javax.persistence-api:2.2'

    providedCompile 'javax.servlet:javax.servlet-api:3.1.0'

    docs "io.spring.docresources:spring-doc-resources:0.2.2.RELEASE@zip"
}

test {
    useJUnitPlatform()
    testLogging.showStandardStreams = true
    finalizedBy jacocoTestReport
}

jar {
    archivesBaseName = 'spring-hateoas-jsonapi'
}

jacocoTestReport {
    dependsOn test
    reports {
        xml.enabled true
    }
    afterEvaluate {
        getClassDirectories().setFrom(files(classDirectories.files.collect {
            fileTree(dir: it, exclude: ['**/Jackson2JsonApiModule\$**Mixin*', '**/AbstractJsonApiSerializer**'])
        }))
    }
}

task doc(type: Sync) {
    dependsOn asciidoctor
    dependsOn javadoc

    from "$buildDir/docs/javadoc"
    into "$buildDir/asciidoc/build/javadoc"
}

task prepareAsciidocBuild(type: Sync) {
    dependsOn configurations.docs
    from {
        configurations.docs.collect { zipTree(it) }
    }
    from "src/main/asciidoc/"
    into "$buildDir/asciidoc/build"
}

asciidoctor {
    sourceDir "$buildDir/asciidoc/build"
    baseDirFollowsSourceFile()

    sources {
        include '*.adoc'
    }

    resources {
        from(sourceDir) {
            include 'images/*', 'css/**', 'js/**'
        }
    }

    attributes 'version': "${project.version}",
            'docinfo': 'shared',
            'stylesdir': 'css/',
            'stylesheet': 'spring.css',
            'linkcss': true,
            'icons': 'font'
}

asciidoctor.dependsOn prepareAsciidocBuild